import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    `java-library`
    `maven-publish`
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
    }

    maven {
        url = uri("https://oss.sonatype.org/content/groups/public/")
    }

    maven {
        url = uri("https://repo.dmulloy2.net/repository/public/")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
    mavenCentral()
}

dependencies {
    compileOnly(libs.org.jetbrains.annotations)
    compileOnly(libs.org.spigotmc.spigot)
    compileOnly(libs.com.comphenix.protocol.protocollib)

    // Scoreboard
    val scoreboardLibraryVersion = "2.2.2"
    implementation("net.megavex:scoreboard-library-api:$scoreboardLibraryVersion")
    runtimeOnly("net.megavex:scoreboard-library-implementation:$scoreboardLibraryVersion")
    implementation("net.megavex:scoreboard-library-extra-kotlin:$scoreboardLibraryVersion")
    runtimeOnly("net.megavex:scoreboard-library-modern:$scoreboardLibraryVersion")
    implementation("net.kyori:adventure-platform-bukkit:4.0.1")

}

group = "me.antidotaleks"
version = "0.0.1"
description = "Iter"
java.sourceCompatibility = JavaVersion.VERSION_21

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc> {
    options.encoding = "UTF-8"
}



tasks.named<ShadowJar>("shadowJar") {
    archiveBaseName.set(rootProject.name)
    archiveVersion.set("$version")
    mergeServiceFiles()
}

tasks.register<Copy>("copyJarToPluginFolder") {
    dependsOn(tasks.named("jar"))
    from(layout.buildDirectory.file("libs/${project.name}-${version}-all.jar"))
    into("G:/Games/Minecraft/Server/iter/plugins")
    rename { fileName -> fileName.replace("-all.jar", ".jar") }
}

tasks.named("build") {
     dependsOn("shadowJar")
    finalizedBy("copyJarToPluginFolder")
}
